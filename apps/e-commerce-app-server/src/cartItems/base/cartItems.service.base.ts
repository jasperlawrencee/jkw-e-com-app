/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CartItems as PrismaCartItems } from "@prisma/client";

export class CartItemsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CartItemsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.cartItems.count(args);
  }

  async cartItemsItems<T extends Prisma.CartItemsFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.CartItemsFindManyArgs>
  ): Promise<PrismaCartItems[]> {
    return this.prisma.cartItems.findMany<Prisma.CartItemsFindManyArgs>(args);
  }
  async cartItems<T extends Prisma.CartItemsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.CartItemsFindUniqueArgs>
  ): Promise<PrismaCartItems | null> {
    return this.prisma.cartItems.findUnique(args);
  }
  async createCartItems<T extends Prisma.CartItemsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CartItemsCreateArgs>
  ): Promise<PrismaCartItems> {
    return this.prisma.cartItems.create<T>(args);
  }
  async updateCartItems<T extends Prisma.CartItemsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CartItemsUpdateArgs>
  ): Promise<PrismaCartItems> {
    return this.prisma.cartItems.update<T>(args);
  }
  async deleteCartItems<T extends Prisma.CartItemsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.CartItemsDeleteArgs>
  ): Promise<PrismaCartItems> {
    return this.prisma.cartItems.delete(args);
  }
}
