/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, OrderItems as PrismaOrderItems } from "@prisma/client";

export class OrderItemsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.OrderItemsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.orderItems.count(args);
  }

  async orderItemsItems<T extends Prisma.OrderItemsFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrderItemsFindManyArgs>
  ): Promise<PrismaOrderItems[]> {
    return this.prisma.orderItems.findMany<Prisma.OrderItemsFindManyArgs>(args);
  }
  async orderItems<T extends Prisma.OrderItemsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrderItemsFindUniqueArgs>
  ): Promise<PrismaOrderItems | null> {
    return this.prisma.orderItems.findUnique(args);
  }
  async createOrderItems<T extends Prisma.OrderItemsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrderItemsCreateArgs>
  ): Promise<PrismaOrderItems> {
    return this.prisma.orderItems.create<T>(args);
  }
  async updateOrderItems<T extends Prisma.OrderItemsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrderItemsUpdateArgs>
  ): Promise<PrismaOrderItems> {
    return this.prisma.orderItems.update<T>(args);
  }
  async deleteOrderItems<T extends Prisma.OrderItemsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrderItemsDeleteArgs>
  ): Promise<PrismaOrderItems> {
    return this.prisma.orderItems.delete(args);
  }
}
